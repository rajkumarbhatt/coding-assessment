@model DAL.ViewModels.AdminDashboardViewModal

<div class="books-container">
    @if (Model.Books != null && Model.Books.Count > 0)
    {
        @foreach (var book in @Model.Books)
        {
            <div class="book-card">
                <div>
                    @{
                        var srcLink = "";
                        if (book.Image == null)
                        {
                            srcLink = "~/images/book-images/default.webp";
                        }
                        else
                        {
                            srcLink = "~/images/book-images/" + book.Image;
                        }
                    }
                    <img src="@Url.Content(@srcLink)" alt="Book Image" class="book-image" />
                </div>
                <div class="book-card-content d-flex flex-column justify-content-between">
                    <h2>@book.Title</h2>
                    <p>Author: @book.Author</p>
                    <p>Published: @book.PublishedYear</p>
                    <p>ISBN: @book.ISBN</p>
                    @if (!Model.InAvailable)
                    {
                        <p>Issued By: @book.IssuedBy</p>
                    }
                    @if (Model.InAvailable)
                    {
                        <div class="action-buttons d-flex gap-3">
                            @{
                                var editBtnId = "edit-" + book.BookId;
                                var deleteBtnId = "delete-" + book.BookId;
                            }
                            <button id="@editBtnId" onclick="editBook('@editBtnId')" class="btn btn-primary edit-book">Edit</button>
                            <button id="@deleteBtnId" onclick="deleteBook('@deleteBtnId')"
                                class="btn btn-danger delete-book">Delete</button>
                        </div>
                    }
                </div>
            </div>
        }
    }
    else
    {
        <div class="text-center text-white">
            <h3>No books found</h3>
        </div>
    }
</div>

<div class="d-flex flex-column flex-sm-row align-items-center justify-content-end g-3 me-sm-5 text-danger2">
    <div class="d-flex align-items-center gap-2">
        <p class="pt-md-3">Items per page: </p>
        <select class="form-select pagination-dropdown text-black" aria-label="Items per page"
            onchange="changePageSizeOrders(this.value)" id="PageSizeSelectOrders">
            <option value="8" selected="@(Model.PageSize == 8 ? "selected" : null)">8</option>
            <option value="12" selected="@(Model.PageSize == 12 ? "selected" : null)">12</option>
            <option value="16" selected="@(Model.PageSize == 16 ? "selected" : null)">16</option>
        </select>
    </div>
    <p class="px-1 pt-md-3">
        Showing @(Model.TotalPages == 0 ? 0 : (Model.PageIndex - 1) * Model.PageSize + 1) -
        @(Math.Min(Model.PageIndex * Model.PageSize, Model.TotalBooks)) of
        @Model.TotalBooks
    </p>
    <div class="d-flex gap-2 gap-sm-0">
        <button id="previousButton" class="p-1 px-2" @(Model.PageIndex == 1 ? "disabled" : "")>&lt;</button>
        <button id="nextButton" class="p-1 px-2 ms-1 border-1 border-secondary" @(Model.PageIndex == Model.TotalPages ?
                                                                                            "disabled" : "")>&gt;</button>
    </div>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
<script>

    var pageIndex = @Model.PageIndex;
    var pageSize = $("#PageSizeSelectOrders").val();

    function editBook(id) {
        $.ajax({
            url: "/Admin/GetBookById/",
            data: { bookId: id.toString().split("-")[1] },
            type: "GET",
            success: function (data) {
                $("#addEditBookModalPartial").html(data);
                $("#addEditBookModal").modal("show");
                $("#addEditBookTitle").text("Edit Book");
                $.validator.unobtrusive.parse("#AddEditBookForm");
            },
            error: function () {
                toastr.error("An error occurred while fetching the book details.");
            }
        });
    }

    function deleteBook(id) {
        $("#deleteBookModal").modal("show");
        var bookId = id.toString().split("-")[1];
        $("#deleteBookButton").off("click").on("click", function () {
            $.ajax({
                url: "/Admin/DeleteBook/",
                data: { bookId: bookId },
                type: "POST",
                success: function (response) {
                    if (response.success) {
                        toastr.success(response.message);
                        reloadPartialView();
                    } else {
                        toastr.error(response.message);
                    }
                },
                error: function () {
                    toastr.error("An error occurred while deleting the book.");
                }
            });
        });
    }

    function changePageSizeOrders(newPageSize) {
        pageSize = newPageSize;
        pageIndex = 1;
        reloadPartialView();
    }

    function reloadPartialView() {
        var searchString = $("#searchInput").val();
        var filterOption = $("#FilterBooksSelectOption").val();
        $.ajax({
            url: '/Admin/RefreshBooksData',
            type: 'GET',
            data: { pageIndex: pageIndex, pageSize: pageSize, inAvailable: inAvailabe, searchValue: searchString, filterValue: filterOption },
            success: function (data) {
                $('#booksDataPartialDiv').html(data);
            },
            error: function () {
                toastr.error("An error occurred while reloading the books data.");
            }
        });
    }

    $("#nextButton").off("click").click(function () {
        if (pageIndex < @Model.TotalPages) {
            pageIndex++;
            reloadPartialView();
        }
    });

    $("#previousButton").off("click").click(function () {
        if (pageIndex > 1) {
            pageIndex--;
            reloadPartialView();
        }
    });
</script>