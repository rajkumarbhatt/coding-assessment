@model DAL.ViewModels.UserDashboardViewModal

<div class="books-container">
    @foreach (var book in @Model.Books)
    {
        <div class="book-card">
            <div>
                @{
                    var srcLink = "";
                    if (book.Image == null)
                    {
                        srcLink = "~/images/book-images/default.webp";
                    }
                    else
                    {
                        srcLink = "~/images/book-images/" + book.Image;
                    }
                }
                <img src="@Url.Content(@srcLink)" alt="Book Image" class="book-image" />
            </div>
            <div class="book-card-content d-flex flex-column justify-content-between">
                <h2>@book.Title</h2>
                <p>Author: @book.Author</p>
                <p>Published: @book.PublishedYear</p>
                <p>ISBN: @book.ISBN</p>
                <div class="action-buttons d-flex gap-3">
                    @{
                        var issueBtnId = "issue-" + book.BookId;
                        var returnBtnId = "return-" + book.BookId;
                    }
                    @if (Model.InIssue)
                    {
                        <button id="@issueBtnId" onclick="issueBook('@issueBtnId')"
                            class="btn btn-primary edit-book">Issue</button>
                    }
                    else
                    {
                        <button id="@returnBtnId" onclick="returnBook('@returnBtnId')"
                            class="btn btn-danger delete-book">Return</button>
                    }
                </div>
            </div>
        </div>
    }
</div>

<div class="d-flex flex-column flex-sm-row align-items-center justify-content-end g-3 me-sm-5 text-danger2">
    <div class="d-flex align-items-center gap-2">
        <p class="pt-md-3">Items per page: </p>
        <select class="form-select pagination-dropdown text-black" aria-label="Items per page"
            onchange="changePageSizeOrders(this.value)" id="PageSizeSelectOrders">
            <option value="8" selected="@(Model.PageSize == 8 ? "selected" : null)">8</option>
            <option value="12" selected="@(Model.PageSize == 12 ? "selected" : null)">12</option>
            <option value="16" selected="@(Model.PageSize == 16 ? "selected" : null)">16</option>
        </select>
    </div>
    <p class="px-1 pt-md-3">
        Showing @(Model.TotalPages == 0 ? 0 : (Model.PageIndex - 1) * Model.PageSize + 1) -
        @(Math.Min(Model.PageIndex * Model.PageSize, Model.TotalBooks)) of
        @Model.TotalBooks
    </p>
    <div class="d-flex gap-2 gap-sm-0">
        <button id="previousButtonOrders" class="p-1 px-2" @(Model.PageIndex == 1 ? "disabled" : "")>&lt;</button>
        <button id="nextButtonOrders" class="p-1 px-2 ms-1 border-1 border-secondary" @(Model.PageIndex ==
                                                                                                  Model.TotalPages ? "disabled" : "")>&gt;</button>
    </div>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
<script>

    var pageIndex = @Model.PageIndex;
    var pageSize = $("#PageSizeSelectOrders").val();

    function changePageSizeOrders(newPageSize) {
        pageSize = newPageSize;
        reloadPartialView();
    }

    function reloadPartialView() {
        $.ajax({
            url: '/User/RefreshBooksData',
            type: 'GET',
            data: { pageIndex: pageIndex, pageSize: pageSize, inIssue: inIssue },
            success: function (data) {
                $('#booksDataPartialDiv').html(data);
            },
            error: function () {
                toastr.error("An error occurred while reloading the books data.");
            }
        });
    }

    function issueBook(id) {
        debugger
        $("#issueBookModal").modal("show");
        var bookId = id.toString().split("-")[1];
        $("#issueBookButton").off("click").on("click", function () {
            $.ajax({
                url: "/User/IssueBook/",
                data: { bookId: bookId },
                type: "POST",
                success: function (data) {
                    if (data.success) {
                        toastr.success(data.message);
                        reloadPartialView();
                    } else {
                        toastr.error(data.message);
                    }
                },
                error: function () {
                    toastr.error("An error occurred while issuing the book.");
                }
            });
        });
    }

    function returnBook(id) {
        $("#returnBookModal").modal("show");
        var bookId = id.toString().split("-")[1];
        $("#returnBookButton").off("click").on("click", function () {
            $.ajax({
                url: "/User/ReturnBook/",
                data: { bookId: bookId },
                type: "POST",
                success: function (data) {
                    if (data.success) {
                        toastr.success(data.message);
                        reloadPartialView();
                    } else {
                        toastr.error(data.message);
                    }
                },
                error: function () {
                    toastr.error("An error occurred while returning the book.");
                }
            });
        });
    }
</script>